<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Rate', 'doctrine');

/**
 * BaseRate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $recipe_id
 * @property integer $user_id
 * @property integer $rating
 * @property Recipe $Recipe
 * @property User $User
 * 
 * @method integer getRecipeId()  Returns the current record's "recipe_id" value
 * @method integer getUserId()    Returns the current record's "user_id" value
 * @method integer getRating()    Returns the current record's "rating" value
 * @method Recipe  getRecipe()    Returns the current record's "Recipe" value
 * @method User    getUser()      Returns the current record's "User" value
 * @method Rate    setRecipeId()  Sets the current record's "recipe_id" value
 * @method Rate    setUserId()    Sets the current record's "user_id" value
 * @method Rate    setRating()    Sets the current record's "rating" value
 * @method Rate    setRecipe()    Sets the current record's "Recipe" value
 * @method Rate    setUser()      Sets the current record's "User" value
 * 
 * @package    betterrecipes
 * @subpackage model
 * @author     Rusty Cage <rcage@resolute.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rate');
        $this->hasColumn('recipe_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('rating', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Recipe', array(
             'local' => 'recipe_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}