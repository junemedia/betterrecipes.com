<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CategoryWonders', 'doctrine');

/**
 * BaseCategoryWonders
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property integer $slot_one_cat_id
 * @property integer $slot_one_subcat_one
 * @property integer $slot_one_subcat_two
 * @property string $slot_one_description
 * @property integer $slot_two_cat_id
 * @property integer $slot_two_subcat_one
 * @property integer $slot_two_subcat_two
 * @property string $slot_two_description
 * @property integer $slot_three_cat_id
 * @property integer $slot_three_subcat_one
 * @property integer $slot_three_subcat_two
 * @property string $slot_three_description
 * @property integer $slot_four_cat_id
 * @property integer $slot_four_subcat_one
 * @property integer $slot_four_subcat_two
 * @property string $slot_four_description
 * @property integer $is_active
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * 
 * @method integer         getId()                     Returns the current record's "id" value
 * @method string          getTitle()                  Returns the current record's "title" value
 * @method integer         getSlotOneCatId()           Returns the current record's "slot_one_cat_id" value
 * @method integer         getSlotOneSubcatOne()       Returns the current record's "slot_one_subcat_one" value
 * @method integer         getSlotOneSubcatTwo()       Returns the current record's "slot_one_subcat_two" value
 * @method string          getSlotOneDescription()     Returns the current record's "slot_one_description" value
 * @method integer         getSlotTwoCatId()           Returns the current record's "slot_two_cat_id" value
 * @method integer         getSlotTwoSubcatOne()       Returns the current record's "slot_two_subcat_one" value
 * @method integer         getSlotTwoSubcatTwo()       Returns the current record's "slot_two_subcat_two" value
 * @method string          getSlotTwoDescription()     Returns the current record's "slot_two_description" value
 * @method integer         getSlotThreeCatId()         Returns the current record's "slot_three_cat_id" value
 * @method integer         getSlotThreeSubcatOne()     Returns the current record's "slot_three_subcat_one" value
 * @method integer         getSlotThreeSubcatTwo()     Returns the current record's "slot_three_subcat_two" value
 * @method string          getSlotThreeDescription()   Returns the current record's "slot_three_description" value
 * @method integer         getSlotFourCatId()          Returns the current record's "slot_four_cat_id" value
 * @method integer         getSlotFourSubcatOne()      Returns the current record's "slot_four_subcat_one" value
 * @method integer         getSlotFourSubcatTwo()      Returns the current record's "slot_four_subcat_two" value
 * @method string          getSlotFourDescription()    Returns the current record's "slot_four_description" value
 * @method integer         getIsActive()               Returns the current record's "is_active" value
 * @method timestamp       getCreatedAt()              Returns the current record's "created_at" value
 * @method timestamp       getUpdatedAt()              Returns the current record's "updated_at" value
 * @method CategoryWonders setId()                     Sets the current record's "id" value
 * @method CategoryWonders setTitle()                  Sets the current record's "title" value
 * @method CategoryWonders setSlotOneCatId()           Sets the current record's "slot_one_cat_id" value
 * @method CategoryWonders setSlotOneSubcatOne()       Sets the current record's "slot_one_subcat_one" value
 * @method CategoryWonders setSlotOneSubcatTwo()       Sets the current record's "slot_one_subcat_two" value
 * @method CategoryWonders setSlotOneDescription()     Sets the current record's "slot_one_description" value
 * @method CategoryWonders setSlotTwoCatId()           Sets the current record's "slot_two_cat_id" value
 * @method CategoryWonders setSlotTwoSubcatOne()       Sets the current record's "slot_two_subcat_one" value
 * @method CategoryWonders setSlotTwoSubcatTwo()       Sets the current record's "slot_two_subcat_two" value
 * @method CategoryWonders setSlotTwoDescription()     Sets the current record's "slot_two_description" value
 * @method CategoryWonders setSlotThreeCatId()         Sets the current record's "slot_three_cat_id" value
 * @method CategoryWonders setSlotThreeSubcatOne()     Sets the current record's "slot_three_subcat_one" value
 * @method CategoryWonders setSlotThreeSubcatTwo()     Sets the current record's "slot_three_subcat_two" value
 * @method CategoryWonders setSlotThreeDescription()   Sets the current record's "slot_three_description" value
 * @method CategoryWonders setSlotFourCatId()          Sets the current record's "slot_four_cat_id" value
 * @method CategoryWonders setSlotFourSubcatOne()      Sets the current record's "slot_four_subcat_one" value
 * @method CategoryWonders setSlotFourSubcatTwo()      Sets the current record's "slot_four_subcat_two" value
 * @method CategoryWonders setSlotFourDescription()    Sets the current record's "slot_four_description" value
 * @method CategoryWonders setIsActive()               Sets the current record's "is_active" value
 * @method CategoryWonders setCreatedAt()              Sets the current record's "created_at" value
 * @method CategoryWonders setUpdatedAt()              Sets the current record's "updated_at" value
 * 
 * @package    betterrecipes
 * @subpackage model
 * @author     Rusty Cage <rcage@resolute.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategoryWonders extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category_wonders');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('slot_one_cat_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_one_subcat_one', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_one_subcat_two', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_one_description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('slot_two_cat_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_two_subcat_one', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_two_subcat_two', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_two_description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('slot_three_cat_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_three_subcat_one', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_three_subcat_two', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_three_description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('slot_four_cat_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_four_subcat_one', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_four_subcat_two', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot_four_description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}