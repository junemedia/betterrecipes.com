<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Contest', 'doctrine');

/**
 * BaseContest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $slug
 * @property string $description
 * @property string $title_tag
 * @property string $summary
 * @property string $prize
 * @property string $keywords
 * @property string $image
 * @property string $rules
 * @property string $rules_url
 * @property integer $sequence
 * @property integer $sponsor_id
 * @property integer $is_active
 * @property integer $is_open_to_public
 * @property integer $user_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property date $start_date
 * @property date $end_date
 * @property string $timezone
 * @property integer $weeks
 * @property string $slideshow_url
 * @property Sponsor $Sponsor
 * @property User $User
 * @property Doctrine_Collection $ContestPeriod
 * @property Doctrine_Collection $Contestant
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getSlug()              Returns the current record's "slug" value
 * @method string              getDescription()       Returns the current record's "description" value
 * @method string              getTitleTag()          Returns the current record's "title_tag" value
 * @method string              getSummary()           Returns the current record's "summary" value
 * @method string              getPrize()             Returns the current record's "prize" value
 * @method string              getKeywords()          Returns the current record's "keywords" value
 * @method string              getImage()             Returns the current record's "image" value
 * @method string              getRules()             Returns the current record's "rules" value
 * @method string              getRulesUrl()          Returns the current record's "rules_url" value
 * @method integer             getSequence()          Returns the current record's "sequence" value
 * @method integer             getSponsorId()         Returns the current record's "sponsor_id" value
 * @method integer             getIsActive()          Returns the current record's "is_active" value
 * @method integer             getIsOpenToPublic()    Returns the current record's "is_open_to_public" value
 * @method integer             getUserId()            Returns the current record's "user_id" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method date                getStartDate()         Returns the current record's "start_date" value
 * @method date                getEndDate()           Returns the current record's "end_date" value
 * @method string              getTimezone()          Returns the current record's "timezone" value
 * @method integer             getWeeks()             Returns the current record's "weeks" value
 * @method string              getSlideshowUrl()      Returns the current record's "slideshow_url" value
 * @method Sponsor             getSponsor()           Returns the current record's "Sponsor" value
 * @method User                getUser()              Returns the current record's "User" value
 * @method Doctrine_Collection getContestPeriod()     Returns the current record's "ContestPeriod" collection
 * @method Doctrine_Collection getContestant()        Returns the current record's "Contestant" collection
 * @method Contest             setId()                Sets the current record's "id" value
 * @method Contest             setName()              Sets the current record's "name" value
 * @method Contest             setSlug()              Sets the current record's "slug" value
 * @method Contest             setDescription()       Sets the current record's "description" value
 * @method Contest             setTitleTag()          Sets the current record's "title_tag" value
 * @method Contest             setSummary()           Sets the current record's "summary" value
 * @method Contest             setPrize()             Sets the current record's "prize" value
 * @method Contest             setKeywords()          Sets the current record's "keywords" value
 * @method Contest             setImage()             Sets the current record's "image" value
 * @method Contest             setRules()             Sets the current record's "rules" value
 * @method Contest             setRulesUrl()          Sets the current record's "rules_url" value
 * @method Contest             setSequence()          Sets the current record's "sequence" value
 * @method Contest             setSponsorId()         Sets the current record's "sponsor_id" value
 * @method Contest             setIsActive()          Sets the current record's "is_active" value
 * @method Contest             setIsOpenToPublic()    Sets the current record's "is_open_to_public" value
 * @method Contest             setUserId()            Sets the current record's "user_id" value
 * @method Contest             setCreatedAt()         Sets the current record's "created_at" value
 * @method Contest             setUpdatedAt()         Sets the current record's "updated_at" value
 * @method Contest             setStartDate()         Sets the current record's "start_date" value
 * @method Contest             setEndDate()           Sets the current record's "end_date" value
 * @method Contest             setTimezone()          Sets the current record's "timezone" value
 * @method Contest             setWeeks()             Sets the current record's "weeks" value
 * @method Contest             setSlideshowUrl()      Sets the current record's "slideshow_url" value
 * @method Contest             setSponsor()           Sets the current record's "Sponsor" value
 * @method Contest             setUser()              Sets the current record's "User" value
 * @method Contest             setContestPeriod()     Sets the current record's "ContestPeriod" collection
 * @method Contest             setContestant()        Sets the current record's "Contestant" collection
 * 
 * @package    betterrecipes
 * @subpackage model
 * @author     Rusty Cage <rcage@resolute.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contest');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('title_tag', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('summary', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('prize', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('rules', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('rules_url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('sequence', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sponsor_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_open_to_public', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('start_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('end_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('timezone', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'CST',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('weeks', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slideshow_url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Sponsor', array(
             'local' => 'sponsor_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('ContestPeriod', array(
             'local' => 'id',
             'foreign' => 'contest_id'));

        $this->hasMany('Contestant', array(
             'local' => 'id',
             'foreign' => 'contest_id'));
    }
}