<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserProvider', 'doctrine');

/**
 * BaseUserProvider
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $provider
 * @property string $provider_uid
 * @property timestamp $created_at
 * @property string $auth_token
 * @property timestamp $updated_at
 * @property User $User
 * 
 * @method integer      getUserId()       Returns the current record's "user_id" value
 * @method string       getProvider()     Returns the current record's "provider" value
 * @method string       getProviderUid()  Returns the current record's "provider_uid" value
 * @method timestamp    getCreatedAt()    Returns the current record's "created_at" value
 * @method string       getAuthToken()    Returns the current record's "auth_token" value
 * @method timestamp    getUpdatedAt()    Returns the current record's "updated_at" value
 * @method User         getUser()         Returns the current record's "User" value
 * @method UserProvider setUserId()       Sets the current record's "user_id" value
 * @method UserProvider setProvider()     Sets the current record's "provider" value
 * @method UserProvider setProviderUid()  Sets the current record's "provider_uid" value
 * @method UserProvider setCreatedAt()    Sets the current record's "created_at" value
 * @method UserProvider setAuthToken()    Sets the current record's "auth_token" value
 * @method UserProvider setUpdatedAt()    Sets the current record's "updated_at" value
 * @method UserProvider setUser()         Sets the current record's "User" value
 * 
 * @package    betterrecipes
 * @subpackage model
 * @author     Rusty Cage <rcage@resolute.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserProvider extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_provider');
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('provider', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('provider_uid', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('auth_token', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}