<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Vote', 'doctrine');

/**
 * BaseVote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $contestant_id
 * @property integer $ip_address
 * @property integer $is_active
 * @property integer $user_id
 * @property timestamp $created_at
 * @property string $uid
 * @property Contestant $Contestant
 * @property User $User
 * 
 * @method integer    getId()            Returns the current record's "id" value
 * @method integer    getContestantId()  Returns the current record's "contestant_id" value
 * @method integer    getIpAddress()     Returns the current record's "ip_address" value
 * @method integer    getIsActive()      Returns the current record's "is_active" value
 * @method integer    getUserId()        Returns the current record's "user_id" value
 * @method timestamp  getCreatedAt()     Returns the current record's "created_at" value
 * @method string     getUid()           Returns the current record's "uid" value
 * @method Contestant getContestant()    Returns the current record's "Contestant" value
 * @method User       getUser()          Returns the current record's "User" value
 * @method Vote       setId()            Sets the current record's "id" value
 * @method Vote       setContestantId()  Sets the current record's "contestant_id" value
 * @method Vote       setIpAddress()     Sets the current record's "ip_address" value
 * @method Vote       setIsActive()      Sets the current record's "is_active" value
 * @method Vote       setUserId()        Sets the current record's "user_id" value
 * @method Vote       setCreatedAt()     Sets the current record's "created_at" value
 * @method Vote       setUid()           Sets the current record's "uid" value
 * @method Vote       setContestant()    Sets the current record's "Contestant" value
 * @method Vote       setUser()          Sets the current record's "User" value
 * 
 * @package    betterrecipes
 * @subpackage model
 * @author     Rusty Cage <rcage@resolute.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVote extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vote');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('contestant_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_address', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('uid', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Contestant', array(
             'local' => 'contestant_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}