<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Poll', 'doctrine');

/**
 * BasePoll
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $homepage_featured
 * @property string $poll_title
 * @property integer $total_votes
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $active
 * @property Doctrine_Collection $PollOption
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getHomepageFeatured()  Returns the current record's "homepage_featured" value
 * @method string              getPollTitle()         Returns the current record's "poll_title" value
 * @method integer             getTotalVotes()        Returns the current record's "total_votes" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method integer             getActive()            Returns the current record's "active" value
 * @method Doctrine_Collection getPollOption()        Returns the current record's "PollOption" collection
 * @method Poll                setId()                Sets the current record's "id" value
 * @method Poll                setHomepageFeatured()  Sets the current record's "homepage_featured" value
 * @method Poll                setPollTitle()         Sets the current record's "poll_title" value
 * @method Poll                setTotalVotes()        Sets the current record's "total_votes" value
 * @method Poll                setCreatedAt()         Sets the current record's "created_at" value
 * @method Poll                setUpdatedAt()         Sets the current record's "updated_at" value
 * @method Poll                setActive()            Sets the current record's "active" value
 * @method Poll                setPollOption()        Sets the current record's "PollOption" collection
 * 
 * @package    betterrecipes
 * @subpackage model
 * @author     Rusty Cage <rcage@resolute.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePoll extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('poll');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('homepage_featured', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('poll_title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('total_votes', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PollOption', array(
             'local' => 'id',
             'foreign' => 'poll_id'));
    }
}