<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Message', 'doctrine');

/**
 * BaseMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $message_type
 * @property string $recipient_email
 * @property string $recipient_name
 * @property string $recipient_id
 * @property string $comment
 * @property integer $sent
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * 
 * @method integer   getId()              Returns the current record's "id" value
 * @method enum      getMessageType()     Returns the current record's "message_type" value
 * @method string    getRecipientEmail()  Returns the current record's "recipient_email" value
 * @method string    getRecipientName()   Returns the current record's "recipient_name" value
 * @method string    getRecipientId()     Returns the current record's "recipient_id" value
 * @method string    getComment()         Returns the current record's "comment" value
 * @method integer   getSent()            Returns the current record's "sent" value
 * @method timestamp getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp getUpdatedAt()       Returns the current record's "updated_at" value
 * @method Message   setId()              Sets the current record's "id" value
 * @method Message   setMessageType()     Sets the current record's "message_type" value
 * @method Message   setRecipientEmail()  Sets the current record's "recipient_email" value
 * @method Message   setRecipientName()   Sets the current record's "recipient_name" value
 * @method Message   setRecipientId()     Sets the current record's "recipient_id" value
 * @method Message   setComment()         Sets the current record's "comment" value
 * @method Message   setSent()            Sets the current record's "sent" value
 * @method Message   setCreatedAt()       Sets the current record's "created_at" value
 * @method Message   setUpdatedAt()       Sets the current record's "updated_at" value
 * 
 * @package    betterrecipes
 * @subpackage model
 * @author     Rusty Cage <rcage@resolute.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('message');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('message_type', 'enum', 10, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'member',
              1 => 'non-member',
             ),
             'primary' => false,
             'default' => 'member',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('recipient_email', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('recipient_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('recipient_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('comment', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('sent', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}