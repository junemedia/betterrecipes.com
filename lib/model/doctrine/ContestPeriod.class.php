<?php

/**
 * ContestPeriod
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    betterrecipes
 * @subpackage model
 * @author     Rusty Cage <rcage@resolute.com>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class ContestPeriod extends BaseContestPeriod {

  public function getOfficialWinner() {
    $q = Doctrine_Core::getTable('Contestant')->createQuery('c');
    $q->where('c.id = ?', $this->getOfficialWinnerId());
    $contestantWinner = $q->fetchOne();

    if ($contestantWinner)
      return $contestantWinner;
    else
      return;
  }

  public function getUnofficialWinner() {
    $q = Doctrine_Core::getTable('Contestant')->createQuery('c');
    $q->where('c.id = ?', $this->getUnofficialWinnerId());
    $contestantWinner = $q->fetchOne();

    if ($contestantWinner)
      return $contestantWinner;
    else
      return;
  }

  public function hasOfficialWinner() {
    if (!is_null($this->getOfficialWinnerId()))
      return true;
    else
      return false;
  }

  public function hasUnofficialWinner() {
    if (!is_null($this->getUnofficialWinnerId()))
      return true;
    else
      return false;
  }

  public function getEditorWinner() {
    $q = Doctrine_Core::getTable('Contestant')->createQuery('c');
    $q->where('c.id = ?', $this->getEditorWinnerId());
    $contestantWinner = $q->fetchOne();

    if ($contestantWinner)
      return $contestantWinner;
    else
      return;
  }

  public function isCurrentContest() {
    if ($this->getWeekOffset() == $this->getContest()->getCurrentWeekOffset()) {
      return true;
    } else {
      return false;
    }
  }

  public function isPastContest() {
    //var_dump($this->getWeekOffset(), $this->getContest()->getCurrentWeekOffset());
    if ($this->getContest()->getCurrentWeekOffset() == false || $this->getWeekOffset() > $this->getContest()->getCurrentWeekOffset()) {
      return true;
    } else {
      return false;
    }
  }

  public function getStartDate() {
    $start_date = strtotime($this->getEndDate().' -6 day');
    return date('m/d/y', $start_date);
  }

  public function getEndDate() {
    $end_date_offset = $this->getWeekOffset() * 7; // Days in a week
    date_default_timezone_set(timezone_name_from_abbr($this->getContest()->getTimezone()));
    if ($end_date_offset > 0)
      $end_date = strtotime($this->getContest()->getEndDate().' -'.$end_date_offset.' day');
    else
      $end_date = strtotime($this->getContest()->getEndDate());
    return date('m/d/y', $end_date);
  }

}

