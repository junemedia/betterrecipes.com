<?php

/**
 * SponsorTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SponsorTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object SponsorTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Sponsor');
    }
    
    public static function getActiveSponsors(){
      $q = Doctrine_Core::getTable('Sponsor')->createQuery('s');
      $q->where('is_active = 1');
      $sponsors = $q->execute();
      return $sponsors;
    }
    
    public static function getSingleSponsor() {
    	$q = Doctrine_Core::getTable('Sponsor')->createQuery('s');
      	$q->where('is_active = 1');
      	$sponsor = $q->fetchOne();
      	return $sponsor;
    }
    
    public static function getFilteredSponsors($params){
      $q = Doctrine_Core::getTable('Sponsor')->createQuery('s');  
     if (isset($params['sponsorsName']) && ($params['sponsorsName'] != "Sponsor Name")){
       $q->where('s.name LIKE ?', "%".$params['sponsorsName']."%");
     }
     if (isset($params['sort'])) {
       switch ($params['sort']) {
         case "name":
           $q->orderBy('s.name ' . $params['sortDir']);
           break;
         case "dateAdded":
           $q->orderBy('s.created_at ' . $params['sortDir']);
           break;         
         case "active":
           $q->orderBy('s.is_active ' . $params['sortDir']);
           $q->addOrderBy('s.created_at DESC');
           break;
         default:
           $q->orderBy('s.created_at ' . $params['sortDir']);
       }
     } else
         $q->orderBy('s.created_at DESC');
     
     return $q;      
    }
    
    public static function updateActive($sponsorId, $active)
    {
      if (isset($sponsorId) && isset($active)){      
      $q = Doctrine_Query::create()
           ->update('Sponsor s')
           ->set('s.is_active', '?', $active)
           ->where('s.id = ?', $sponsorId)
           ->execute();
      return $q;
    }
  }
}